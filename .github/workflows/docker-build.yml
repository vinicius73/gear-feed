name: image build
on:
  workflow_dispatch:
  push:
    tags:
      - "*"

concurrency:
  group: ci-tests-${{ github.ref }}-1
  cancel-in-progress: true

jobs:
  build:
    name: Build docker image
    runs-on:
      labels: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Docker meta
        uses: docker/metadata-action@v4
        id: meta
        with:
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=latest
            type=raw,prefix=build-,value=${{ github.run_number }}
            type=schedule
            type=ref,event=branch,suffix=-${{github.run_number}}
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          build-args: |
            MODE=production
            APP_VERSION=${{ github.version }}
            BUILD_NUMBER=${{ github.run_number }}
            BUILD_REF=${{ github.sha }}
            BUILDER=${{ github.actor }}
            BUILD_DATE=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
            APP_REVISION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=registry,ref=ghcr.io/${{ github.repository }}:latest
          cache-to: type=inline
